# version: '3.8'

# services:
#   backend:
#     build: ./backend
#     container_name: mi-sistema-backend
#     ports:
#       - "3001:3001"
#     environment:
#       - NODE_ENV=production
#       - PORT=3001
#     volumes:
#       - ./backend/logs:/app/logs
#     restart: unless-stopped
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
#       interval: 30s
#       timeout: 10s
#       retries: 3

#   frontend:
#     build: ./frontend
#     container_name: mi-sistema-frontend
#     # ports:
#     #   - "8080:80"
#     depends_on:
#       - backend
#     restart: unless-stopped
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost"]
#       interval: 30s
#       timeout: 10s
#       retries: 3

#   proxy:
#     image: nginx:alpine
#     container_name: mi-sistema-proxy
#     ports:
#       - "80:80"
#     volumes:
#       - ./nginx-proxy.conf:/etc/nginx/conf.d/default.conf
#     depends_on:
#       - frontend
#       - backend
#     restart: unless-stopped

# networks:
#   default:
#     name: mi-sistema-network

version: '3.8'

services:
  backend:
    build: ./backend
    container_name: mi-sistema-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    volumes:
      - ./backend/logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./frontend
    container_name: mi-sistema-frontend
    # No necesitas exponer puertos externos, solo internos
    expose:
      - "80"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  proxy:
    image: nginx:alpine
    container_name: mi-sistema-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

networks:
  default:
    name: mi-sistema-network